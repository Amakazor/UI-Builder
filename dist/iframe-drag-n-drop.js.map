{"version":3,"sources":["../src/iframe-drag-n-drop.js"],"names":["$","document","ready","interact","draggable","inertia","restrict","restriction","endOnly","elementRect","top","left","bottom","right","autoScroll","onmove","dragMoveListener","onend","event","textEl","target","querySelector","textContent","Math","sqrt","pow","pageX","x0","pageY","y0","toFixed","console","log","x","parseFloat","getAttribute","dx","y","dy","style","webkitTransform","transform","setAttribute"],"mappings":"AAAA,CAAC,YAAY;AACTA,MAAEC,QAAF,EAAYC,KAAZ,CAAkB,YAAM;AACpBC,iBAAS,gBAAT,EACKC,SADL,CACe;AACP;AACAC,qBAAS,IAFF;AAGP;AACAC,sBAAU;AACNC,6BAAa,QADP;AAENC,yBAAS,IAFH;AAGNC,6BAAa,EAAEC,KAAK,CAAP,EAAUC,MAAM,CAAhB,EAAmBC,QAAQ,CAA3B,EAA8BC,OAAO,CAArC;AAHP,aAJH;AASP;AACAC,wBAAY,IAVL;;AAYP;AACAC,oBAAQC,gBAbD;AAcP;AACAC,mBAAO,eAAUC,KAAV,EAAiB;AACpB,oBAAIC,SAASD,MAAME,MAAN,CAAaC,aAAb,CAA2B,GAA3B,CAAb;;AAEAF,2BAAWA,OAAOG,WAAP,GACP,yBACGC,KAAKC,IAAL,CAAUD,KAAKE,GAAL,CAASP,MAAMQ,KAAN,GAAcR,MAAMS,EAA7B,EAAiC,CAAjC,IACTJ,KAAKE,GAAL,CAASP,MAAMU,KAAN,GAAcV,MAAMW,EAA7B,EAAiC,CAAjC,CADS,GAC6B,CADvC,CAAD,CAEGC,OAFH,CAEW,CAFX,CADF,GAGkB,IAJtB;AAKH;AAvBM,SADf;AA0BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAASd,gBAAT,CAA0BE,KAA1B,EAAiC;AAC7Ba,oBAAQC,GAAR,CAAY,aAAZ;AACA,gBAAIZ,SAASF,MAAME,MAAnB;;AACI;AACAa,gBAAI,CAACC,WAAWd,OAAOe,YAAP,CAAoB,QAApB,CAAX,KAA6C,CAA9C,IAAmDjB,MAAMkB,EAFjE;AAAA,gBAGIC,IAAI,CAACH,WAAWd,OAAOe,YAAP,CAAoB,QAApB,CAAX,KAA6C,CAA9C,IAAmDjB,MAAMoB,EAHjE;;AAKA;AACAlB,mBAAOmB,KAAP,CAAaC,eAAb,GACIpB,OAAOmB,KAAP,CAAaE,SAAb,GACA,eAAeR,CAAf,GAAmB,MAAnB,GAA4BI,CAA5B,GAAgC,KAFpC;;AAIA;AACAjB,mBAAOsB,YAAP,CAAoB,QAApB,EAA8BT,CAA9B;AACAb,mBAAOsB,YAAP,CAAoB,QAApB,EAA8BL,CAA9B;AACH;AACJ,KAjFD;AAkFH,CAnFD","file":"iframe-drag-n-drop.js","sourcesContent":["(function () {\r\n    $(document).ready(() => {\r\n        interact('body :not(div)')\r\n            .draggable({\r\n                // enable inertial throwing\r\n                inertia: true,\r\n                // keep the element within the area of it's parent\r\n                restrict: {\r\n                    restriction: 'parent',\r\n                    endOnly: true,\r\n                    elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\r\n                },\r\n                // enable autoScroll\r\n                autoScroll: true,\r\n\r\n                // call this function on every dragmove event\r\n                onmove: dragMoveListener,\r\n                // call this function on every dragend event\r\n                onend: function (event) {\r\n                    var textEl = event.target.querySelector('p');\r\n\r\n                    textEl && (textEl.textContent =\r\n                        'moved a distance of '\r\n                        + (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\r\n                            Math.pow(event.pageY - event.y0, 2) | 0))\r\n                            .toFixed(2) + 'px');\r\n                }\r\n            })\r\n        // .resizable({\r\n        //     // resize from all edges and corners\r\n        //     edges: { left: true, right: true, bottom: true, top: true },\r\n\r\n        //     // keep the edges inside the parent\r\n        //     restrictEdges: {\r\n        //         outer: 'parent',\r\n        //         endOnly: true,\r\n        //     },\r\n\r\n        //     // minimum size\r\n        //     restrictSize: {\r\n        //         min: { width: 100, height: 50 },\r\n        //     },\r\n\r\n        //     inertia: true,\r\n        // })\r\n        // .on('resizemove', function (event) {\r\n        //     var target = event.target,\r\n        //         x = (parseFloat(target.getAttribute('data-x')) || 0),\r\n        //         y = (parseFloat(target.getAttribute('data-y')) || 0);\r\n\r\n        //     // update the element's style\r\n        //     target.style.width = event.rect.width + 'px';\r\n        //     target.style.height = event.rect.height + 'px';\r\n\r\n        //     // translate when resizing from top or left edges\r\n        //     x += event.deltaRect.left;\r\n        //     y += event.deltaRect.top;\r\n\r\n        //     target.style.webkitTransform = target.style.transform =\r\n        //         'translate(' + x + 'px,' + y + 'px)';\r\n\r\n        //     target.setAttribute('data-x', x);\r\n        //     target.setAttribute('data-y', y);\r\n        //     target.textContent = Math.round(event.rect.width) + '\\u00D7' + Math.round(event.rect.height);\r\n        // });\r\n\r\n        function dragMoveListener(event) {\r\n            console.log('hello world');\r\n            var target = event.target,\r\n                // keep the dragged position in the data-x/data-y attributes\r\n                x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,\r\n                y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\r\n\r\n            // translate the element\r\n            target.style.webkitTransform =\r\n                target.style.transform =\r\n                'translate(' + x + 'px, ' + y + 'px)';\r\n\r\n            // update the posiion attributes\r\n            target.setAttribute('data-x', x);\r\n            target.setAttribute('data-y', y);\r\n        }\r\n    });\r\n})();"]}